/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        capslock {
            bindings = <&kp CAPS>;
            key-positions = <24 35>;
        };

        toggle_colemak-dh {
            bindings = <&tog 1>;
            key-positions = <38 39>;
            layers = <0 1>;
        };
    };

    behaviors {
        lhrm: lhrm {
            compatible = "zmk,behavior-hold-tap";
            label = "Left Home Row Mod";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 39 40 41 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };

        rhrm: rhrm {
            compatible = "zmk,behavior-hold-tap";
            label = "Right Home Row Mod";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <39 40 41 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&gresc     &kp Q         &kp W         &kp E          &kp R          &kp T          &kp Y              &kp U          &kp I          &kp O         &kp P            &kp BSLH
&kp TAB    &lhrm LGUI A  &lhrm LALT S  &lhrm LCTRL D  &lhrm LSHFT F  &kp G          &kp H              &rhrm RSHFT J  &rhrm RCTRL K  &rhrm RALT L  &rhrm RCMD SEMI  &kp APOS
&kp LSHFT  &kp Z         &kp X         &kp C          &kp V          &kp B          &kp N              &kp M          &kp COMMA      &kp DOT       &kp FSLH         &kp RSHFT
                                       &mo 6          &mo 4          &lt 2 SPACE    &mt K_CMENU SPACE  &lt 3 BSPC     &lt 5 DEL
            >;
        };

        colemak-dh {
            bindings = <
&gresc     &kp Q         &kp W         &kp F          &kp P          &kp B          &kp J              &kp L          &kp U          &kp Y         &kp SEMI      &kp BSLH
&kp TAB    &lhrm LGUI A  &lhrm LALT R  &lhrm LCTRL S  &lhrm LSHFT T  &kp G          &kp M              &rhrm RSHFT N  &rhrm RCTRL E  &rhrm RALT I  &rhrm RGUI O  &kp APOS
&kp LSHFT  &kp Z         &kp X         &kp C          &kp D          &kp V          &kp K              &kp H          &kp COMMA      &kp DOT       &kp FSLH      &kp LSHFT
                                       &mo 6          &mo 4          &lt 2 SPACE    &mt K_CMENU SPACE  &lt 3 BSPC     &lt 5 DEL
            >;
        };

        num {
            bindings = <
&trans  &trans    &trans        &trans     &trans     &trans    &trans  &kp N7  &kp N8   &kp N9  &trans  &trans
&trans  &kp LCMD  &kp LEFT_ALT  &kp LCTRL  &kp LSHFT  &trans    &trans  &kp N4  &kp N5   &kp N6  &trans  &trans
&trans  &trans    &trans        &trans     &trans     &trans    &trans  &kp N1  &kp N2   &kp N3  &trans  &trans
                                &trans     &trans     &trans    &trans  &kp N0  &kp DOT
            >;
        };

        nav {
            bindings = <
&trans  &kp SCROLLLOCK  &mt LC(HOME) UP   &kp INSERT     &kp PG_UP  &trans    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &mt HOME LEFT   &mt LC(END) DOWN  &mt END RIGHT  &kp PG_DN  &trans    &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &trans          &trans            &trans         &trans     &trans    &trans  &trans     &trans     &trans    &trans    &trans
                                          &trans         &trans     &trans    &trans  &trans     &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &trans     &trans          &mmv MOVE_UP    &trans           &trans          &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP    &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans     &trans          &trans          &msc SCRL_LEFT   &msc SCRL_DOWN  &msc SCRL_RIGHT
                            &trans     &trans     &trans    &mkp LCLK  &mkp MCLK       &mkp RCLK
            >;
        };

        fn {
            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans  &trans     &trans     &trans    &trans    &trans
                         &trans   &trans   &trans    &trans  &trans     &trans
            >;
        };

        sys {
            bindings = <
&bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR        &trans      &kp C_PREV    &kp C_STOP        &kp C_NEXT  &kp C_BRI_UP  &trans
&trans        &trans        &trans        &trans        &trans        &sys_reset        &trans      &kp C_FF      &kp C_PLAY_PAUSE  &kp C_RW    &kp C_BRI_DN  &trans
&trans        &trans        &trans        &trans        &trans        &bt BT_CLR_ALL    &trans      &trans        &trans            &trans      &trans        &trans
                                          &trans        &trans        &trans            &kp C_MUTE  &kp C_VOL_UP  &kp C_VOL_DN
            >;
        };
    };
};
